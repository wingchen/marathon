//
// protoc --java_out=src/main/java/ --proto_path=/path/to/mesos/include/mesos/ --proto_path=src/main/proto/ src/main/proto/marathon.proto
//
package mesosphere.marathon;

option java_package = "mesosphere.marathon";
option java_outer_classname = "Protos";

import "mesos.proto";

message Constraint {
  required string field = 1;
  enum Operator {
      // Field must be unique across all tasks.
      UNIQUE = 0;
      // Field must match the regex given by value.
      LIKE = 1;
      // Tasks will be clustered, i.e. all tasks need to have the same value. If value is not set, any value will be
      // accepted for the first task, and subsequent tasks must use that same value.
      CLUSTER = 2;
      // Tasks will be grouped by field. Value specifies the minimum size of each group.
      GROUP_BY = 3;
  }
  required Operator operator = 2;
  optional string value = 3;
}

message HealthCheckDefinition {
  enum Protocol {
    HTTP = 0;
    TCP = 1;
  }
  required Protocol protocol = 1;
  required uint32 portIndex = 2 [default = 0];
  optional uint32 gracePeriodSeconds = 3 [default = 15];
  optional uint32 intervalSeconds = 4 [default = 10];
  optional uint32 timeoutSeconds = 5 [default = 20];
  optional string path = 6 [default = "/"]; // used for HTTP only
  optional uint32 maxConsecutiveFailures = 7 [default = 3];
}

message ServiceDefinition {
  required string id = 1;
  required mesos.CommandInfo cmd = 2;
  required uint32 instances = 3;
  repeated mesos.Resource resources = 4;
  optional string description = 5;
  repeated uint32 ports = 6;
  repeated Constraint constraints = 7;
  required string executor = 8 [default = ""];
  optional double taskRateLimit = 9 [default = 1];
  optional ContainerInfo container = 10;
  optional string version = 11 [default = "1970-01-01T00:00:00.000Z"]; //a version is required since version 0.5
  repeated HealthCheckDefinition healthChecks = 12;
}

message MarathonTask {
  required string id = 1;
  optional string host = 2;
  repeated uint32 ports = 3;
  repeated mesos.Attribute attributes = 4;
  optional int64 staged_at = 5;
  optional int64 started_at = 6;
  repeated mesos.TaskStatus statuses = 7;
  optional string version = 8;
}

message MarathonApp {
  optional string name = 1;
  repeated MarathonTask tasks = 2;
}

message ContainerInfo {
  required bytes image = 1 [default = ""];
  repeated bytes options = 2;
}

message EventSubscribers {
  repeated string callback_urls = 1;
}

//group messages ------------------------------------------

message ScalingStrategyDefinition {
  required double minimumHealthCapacity = 1;
  optional double maximumRunningFactor = 2;
}

message GroupDefinition {
  required string id = 1;
  required string version = 2;
  required ScalingStrategyDefinition scalingStrategy = 3;
  repeated ServiceDefinition apps = 4;
}

//deployment messages --------------------------------------

message DeploymentPlanDefinition {
  required string id = 1;
  required string version = 2;
  required GroupDefinition originial = 4;
  required GroupDefinition target = 5;
}